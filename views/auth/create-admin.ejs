<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-warning text-dark text-center">
                    <h4><i class="fas fa-user-shield me-2"></i>Create Admin Account</h4>
                    <small class="text-muted">Authorized Personnel Only</small>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning" role="alert">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Warning:</strong> This page is for creating admin accounts only. 
                        You must have the secret code to proceed.
                    </div>
                    
                    <form method="POST" action="/create-admin" id="adminForm" novalidate>
                        <div class="mb-3">
                            <label for="secretCode" class="form-label">
                                <i class="fas fa-key me-1"></i>Secret Code *
                            </label>
                            <input type="password" class="form-control" id="secretCode" name="secretCode" 
                                   placeholder="Enter the secret code" required>
                            <div class="invalid-feedback">
                                Please enter the secret code.
                            </div>
                            <div class="form-text">Contact system administrator for the secret code.</div>
                        </div>
                        
                        <hr>
                        
                        <div class="mb-3">
                            <label for="username" class="form-label">
                                <i class="fas fa-user me-1"></i>Admin Username *
                            </label>
                            <input type="text" class="form-control" id="username" name="username" 
                                   placeholder="Enter admin username" required minlength="3" maxlength="30" pattern="^[a-zA-Z0-9]+$">
                            <div class="invalid-feedback">
                                Username must be 3-30 characters and contain only letters and numbers.
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="email" class="form-label">
                                <i class="fas fa-envelope me-1"></i>Admin Email *
                            </label>
                            <input type="email" class="form-control" id="email" name="email" 
                                   placeholder="Enter admin email" required>
                            <div class="invalid-feedback">
                                Please enter a valid email address.
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="password" class="form-label">
                                <i class="fas fa-lock me-1"></i>Password *
                            </label>
                            <input type="password" class="form-control" id="password" name="password" 
                                   placeholder="Enter strong password" required minlength="8">
                            <div class="invalid-feedback" id="passwordError">
                                Password must be at least 8 characters with uppercase, lowercase, number, and special character.
                            </div>
                            <div class="valid-feedback">
                                Password meets all requirements!
                            </div>
                            <div class="form-text">
                                <small id="passwordHelp">
                                    <span id="lengthCheck" class="text-muted"><i class="fas fa-times text-danger"></i> At least 8 characters</span><br>
                                    <span id="uppercaseCheck" class="text-muted"><i class="fas fa-times text-danger"></i> One uppercase letter</span><br>
                                    <span id="lowercaseCheck" class="text-muted"><i class="fas fa-times text-danger"></i> One lowercase letter</span><br>
                                    <span id="numberCheck" class="text-muted"><i class="fas fa-times text-danger"></i> One number</span><br>
                                    <span id="specialCheck" class="text-muted"><i class="fas fa-times text-danger"></i> One special character</span>
                                </small>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">
                                <i class="fas fa-lock me-1"></i>Confirm Password *
                            </label>
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" 
                                   placeholder="Confirm password" required>
                            <div class="invalid-feedback">
                                Passwords do not match.
                            </div>
                            <div class="valid-feedback">
                                Passwords match!
                            </div>
                        </div>
                        
                        <button type="submit" class="btn btn-warning w-100 btn-custom" id="submitBtn" disabled>
                            <i class="fas fa-user-shield me-2"></i>Create Admin Account
                        </button>
                    </form>
                    
                    <hr>
                    
                    <div class="text-center">
                        <p class="mb-2">
                            <a href="/login" class="text-decoration-none">
                                <i class="fas fa-sign-in-alt me-1"></i>Back to Login
                            </a>
                        </p>
                        <p class="mb-0">
                            <small class="text-muted">
                                For student registration, <a href="/register">click here</a>
                            </small>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('adminForm');
    const password = document.getElementById('password');
    const confirmPassword = document.getElementById('confirmPassword');
    const submitBtn = document.getElementById('submitBtn');
    
    // Password validation checks
    const checks = {
        length: document.getElementById('lengthCheck'),
        uppercase: document.getElementById('uppercaseCheck'),
        lowercase: document.getElementById('lowercaseCheck'),
        number: document.getElementById('numberCheck'),
        special: document.getElementById('specialCheck')
    };
    
    function updateCheck(element, isValid) {
        const icon = element.querySelector('i');
        if (isValid) {
            icon.className = 'fas fa-check text-success';
            element.className = 'text-success';
        } else {
            icon.className = 'fas fa-times text-danger';
            element.className = 'text-muted';
        }
    }
    
    function validatePassword() {
        const pwd = password.value;
        const hasLength = pwd.length >= 8;
        const hasUppercase = /[A-Z]/.test(pwd);
        const hasLowercase = /[a-z]/.test(pwd);
        const hasNumber = /[0-9]/.test(pwd);
        const hasSpecial = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(pwd);
        
        updateCheck(checks.length, hasLength);
        updateCheck(checks.uppercase, hasUppercase);
        updateCheck(checks.lowercase, hasLowercase);
        updateCheck(checks.number, hasNumber);
        updateCheck(checks.special, hasSpecial);
        
        const isValid = hasLength && hasUppercase && hasLowercase && hasNumber && hasSpecial;
        
        if (pwd.length > 0) {
            if (isValid) {
                password.classList.remove('is-invalid');
                password.classList.add('is-valid');
            } else {
                password.classList.remove('is-valid');
                password.classList.add('is-invalid');
            }
        } else {
            password.classList.remove('is-valid', 'is-invalid');
        }
        
        return isValid;
    }
    
    function validateConfirmPassword() {
        const pwd = password.value;
        const confirmPwd = confirmPassword.value;
        
        if (confirmPwd.length > 0) {
            if (pwd === confirmPwd && pwd.length > 0) {
                confirmPassword.classList.remove('is-invalid');
                confirmPassword.classList.add('is-valid');
                return true;
            } else {
                confirmPassword.classList.remove('is-valid');
                confirmPassword.classList.add('is-invalid');
                return false;
            }
        } else {
            confirmPassword.classList.remove('is-valid', 'is-invalid');
            return false;
        }
    }
    
    function validateForm() {
        const isPasswordValid = validatePassword();
        const isConfirmValid = validateConfirmPassword();
        const allFieldsFilled = form.checkValidity();
        
        submitBtn.disabled = !(isPasswordValid && isConfirmValid && allFieldsFilled);
    }
    
    // Real-time validation
    password.addEventListener('input', validateForm);
    confirmPassword.addEventListener('input', validateForm);
    
    // Validate other fields
    form.querySelectorAll('input[required]').forEach(input => {
        input.addEventListener('input', function() {
            if (this.checkValidity()) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
            } else {
                this.classList.remove('is-valid');
                this.classList.add('is-invalid');
            }
            validateForm();
        });
    });
    
    // Form submission
    form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        if (!validatePassword() || !validateConfirmPassword()) {
            e.stopPropagation();
            return false;
        }
        
        if (form.checkValidity()) {
            form.submit();
        } else {
            form.classList.add('was-validated');
        }
    });
});
</script>